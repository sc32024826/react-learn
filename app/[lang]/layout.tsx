import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { i18nConfig } from "@/i18nConfig";
import { dir } from "i18next";

interface Props {
  children: Readonly<React.ReactNode>;
  // params: Promise<{ locale: string }>;
  params: { locale: string };
}

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return i18nConfig.locales.map((locale) => ({ locale }));
}

export default function RootLayout({ children, params }: Props) {
  const { locale } = params;
  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
